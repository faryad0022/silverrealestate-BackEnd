// <auto-generated />
using System;
using BackEnd_Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd_Persistence.Migrations
{
    [DbContext(typeof(RealEstateDbContext))]
    partial class RealEstateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Blog.BlogContent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlogGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("BlogGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Review")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tags")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ViewCount")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BlogGroupId");

                    b.ToTable("BlogContents");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlogGroupId = 2L,
                            BlogGroupName = "دانشگاه های قبرس",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(2130),
                            ImageName = "EMU.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            Tags = "دانشگاه,قبرس",
                            Text = "بعنوان قدیمی ترین و اولین دانشگاه دولتی در قبرس شمالی، تمامی دانشکده ها و رشته های دانشگاه مدیترانه شرقی از زمان تاسیس خود در سال 1979 مورد تایید شورای عالی آموزش عالی قبرس شمالی (YODAK) و همچنین آموزش عالی کشور ترکیه (YOK) می باشند.\r\n\r\nدانشگاه مدیترانه شرقی با بهره گیری از محوطه دانشگاهی بوسعت 110 هکتار و زیرساختی با بالاترین استاندارد اروپا مفتخر به ذکر واقعیات زیر می باشد:\r\nبزرگترین محوطه دانشگاهی در منطقه\r\n12 دانشکده و 204 رشته در تمامی مقاطع\r\nمدرسه آمادگی زبان های خارجی\r\nبیش از 1100 عضو هیات علمی از 35 کشور متفاوت\r\nمعتبرترین و بزرگترین دانشگاه انگلیسی زبان در قبرس شمالی\r\nآموزش بیش از 17500 دانشجو از 110 کشور\r\nامکان یادگیری حداقل یک زبان خارجی بغیر از زبان انگلیسی برای تمامی دانشجویان\r\nبهره مندی از بهترین و مدرنترین امکانات ورزشی و فرهنگی\r\nامکان استفاده از برنامه های متنوع تبادل دانشجو با بیش از 220 دانشگاه معتبر در سرتاسر جهان برای تمامی دانشجویان\r\nارایه مدارک فارغ التحصیلی معتبر در سرتاسر دنیا\r\nارایه مدارک مورد تایید معتبرترین نهادهای اعتبارسنجی دنیا\r\nجزو دانشگاه های برتر دنیا از نظر رتبه بندی دانشگاهی تایمز (Times Higher Education)\r\nکسب 5 ستاره QS از نظر کیفیت آموزش\r\nدانشگاه مدیترانه شرقی  از طریق آموزش مهارتهای نوآوری و تشویق به خلاقیت آینده حرفه ای دانشجویان خود را در سطح بین الملل تضمین می کند.\r\n\r\n\r\nدانشگاه مدیترانه شرقی استاندارد کیفیت آموزش را در 12 دانشکده، 108 رشته کارشناسی و 96 رشته در سطوح کارشناسی ارشد و دکتری خود تعریف نموده است.",
                            Title = "دانشگاه مدیترانه شرقی",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 2L,
                            BlogGroupId = 2L,
                            BlogGroupName = "دانشگاه های قبرس",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(4132),
                            ImageName = "EMU.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            Tags = "دانشگاه,قبرس",
                            Text = "شما هم می توانید براحتی و بصورت آنلاین فرم درخواست اخذ پذیرش جهت پیوستن به خانواده بزرگ دانشگاه مدیترانه شرقی تکمیل و ارایه نمایید. برای تکمیل فرم درخواست اخذ پذیرش تنها کافی است با وارد کردن آدرس ایمیل خود در یکی از لینکهای زیر ثبت نام نمایید. دستور العمل ثبت نام و تکمیل فرم بصورت مشروح در فیلم آموزشی ذکر شده است: \r\nرشته های مقاطع کاردانی و کارشناسی\r\nرشته های مقاطع کارشناسی ارشد و دکتری\r\nنکات مهم:\r\nدانشگاه مدیترانه شرقی در ترمهای پاییز و بهار پذیرای دانشجویان جدید می باشد.\r\nهیچ گونه امتحان ورودی برای هیچ یک از رشته ها جهت اخذ پذیرش وجود ندارد.\r\nاخذ پذیرش از دانشگاه مدیترانه شرقی برای تمامی رشته ها و مقاطع کاملا رایگان می باشد. به هیچ عنوان هیچگونه وجهی جهت اخذ پذیرش به هیچ شخصی پرداخت ننمایید.\r\nشما می توانید به راحتی از بورسیه %50 درصد برای تمامی رشته های مقطع کارشناسی و کارشناسی ارشد باستثنا رشته های پزشکی و داروسازی بهره مند شوید. ",
                            Title = "مدارک لازم جهت ثبت نام در دانشگاه های قبرس",
                            ViewCount = 0L
                        },
                        new
                        {
                            Id = 3L,
                            BlogGroupId = 1L,
                            BlogGroupName = "اخبار قبرس",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(4142),
                            ImageName = "CYP.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true,
                            Tags = "شرایط جدید اقامت در قبرس",
                            Text = "خذ تابعیت با تولد فرزند در دنیا از دو قانون اصل خاک و اصل خون تبعیت میکند. برای مهاجرت از طریق تولد فرزند باید با قوانین آن کشور آشنا باشید. بسیار مهم است که بدانید آن کشور از کدام یک از این قوانین تبعیت میکند.\r\n\r\nقانون اصل خاک : در این قانون به دنیا آمدن و تولد فرزند در خاک کشور مورد نظر می باشد. بدون در نظر گرفتن اینکه پدر و مادر تابعیت کدام کشور را دارند.\r\n\r\nقانون اصل خون: در این اصل بسیار مهم آن است که یکی از پدر یا مادر یا هر دو، تبعه کشور مورد نظر باشند. در این حالت اینکه فرزند در کدام کشور متولد می شود اهمیتی ندارد.\r\n\r\nندا عباسیآنلاین",
                            Title = "شرایط جدید اخذ اقامت قبرس شمالی",
                            ViewCount = 0L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Blog.BlogGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlogGroups");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(7929),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "اخبار قبرس"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(8491),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "دانشگاه های قبرس"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 89, DateTimeKind.Local).AddTicks(8500),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "کنسرت ها"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.AboutUs", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeamImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AboutUs");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 83, DateTimeKind.Local).AddTicks(8763),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Text = "املاک شبکه نقره ای با بیش از 6 سال سابقه درخشان آماده ی ارائه بهترین خدمات در راستای خرید ملک،سرمایه گذاری، اخذ اقامت، ثبت شرکت ، پذیرش دانشجویی و کلیه خدمات به همراه ارایه گشت های محلی با بکار گیری راهنمایان فارسی زبان بصورت گروهی و اختصاصی برای افراد و آژانسهای مسافرتی، به شما عزیزان در قبرس شمالی میباشد."
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Address", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkHour")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CellPhone = "+98-9123071411",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 88, DateTimeKind.Local).AddTicks(5326),
                            Email = "mahancomputer49@gmail.com",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "کیش - شهرک صدف - خیابان سبلان - پلاک 27 - واحد6",
                            Telephone = "00987644446503",
                            WorkHour = "شنبه تا جمعه ساعت 8-20"
                        },
                        new
                        {
                            Id = 2L,
                            CellPhone = "+90-5338355243",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 88, DateTimeKind.Local).AddTicks(5367),
                            Email = "mahancomputer49@gmail.com",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "قبرس شمالی - شهرک رویال سان - پرل 105",
                            Telephone = "00987644446503",
                            WorkHour = "شنبه تا جمعه ساعت 8-20"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Banner", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BannerImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.CommonQuestion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Answer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CommonQuestions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Answer = "قبرس با داشتن آب و هوای معتدل و مرطوب مدیترانه ایی مقصد مورد علاقه جهانگردان برای تعطیلات می باشد، با داشتن بیش از ۳۰۰ روز آفتابی و گرمایی مطلوب و کوهستان هایی در دل خود، از اعتدالی مدیترانه ایی برخوردار است.",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(2841),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Question = "قبرس کجاست؟"
                        },
                        new
                        {
                            Id = 2L,
                            Answer = "قبرس شمالی با داشتن ۳۶ درصد از مساحت کل جزیره قبرس به علت داشتن شرایط مهاجرتی آسان و مالیات بسیار کم در قیاس با جمهوری قبرس و سایر کشورهای اروپایی مورد توجه سرمایه گذارانی از نقاط مختلف دنیا قرار گرفته است",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(3745),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Question = "چرا قبرس شمالی؟"
                        },
                        new
                        {
                            Id = 3L,
                            Answer = "لیر ترکیه به عنوان ارز رایج این کشور شناخته می شود ولی خرید فروش ملک به پوند انگلستان می باشد و دلار و یورو هم در کنار این دو واحد پولی مورد استفاده قرار می گیرد.",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(3753),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Question = "واحد پولی قبرس شمالی چه می باشد؟"
                        },
                        new
                        {
                            Id = 4L,
                            Answer = "امنیت بالای قبرس شمالی در کنار رفاه مردم این کشور می تواند برای هر خانواده ایی دلیلی مناسب برای مهاجرت به قبرس شمالی باشد، بی علت نیست اگر قبرس شمالی در فهرست پنج کشور امن دنیا قرار گرفته است.",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(3755),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Question = "آیا قبرس شمالی برای زندگی خانوادگی مناسب می باشد؟"
                        },
                        new
                        {
                            Id = 5L,
                            Answer = "برای ورود به قبرس شمالی به صورت توریستی نیازی به اخذ ویزا نخواهید داشت.  برای داشتن اقامت بیشتر، از طریق اقامت دانشجویی، خرید ملک و یا ثبت شرکت و یا اشتغال میسر خواهد بود.",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(3757),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Question = "شرایط اخذ ویزا برای ورود به قبرس شمالی چگونه می باشد؟"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.ConstructorInformation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConstructorLogo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ConstructorInformation");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ConstructorLogo = "Noyanlar.jpg",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(8993),
                            Description = "گروه شرکت های نویانلار که در سال 1973 تأسیس شد، خدمات با کیفیت بالا را در تمام زمینه های صنعت ساخت و ساز در قبرس شمالی ارائه می دهد. این یک شرکت خانوادگی موفق است که کیفیت و رشد قابل اعتماد را در صنعت ساخت و ساز فراهم می کند. پروژه های ما مطابق با طرح های ساختمانی معاصر انجام می شود تا رضایتمندی بالا را فراهم کند.این مسیر باتاسیس شرکت معماری و مهندسی با مسئولیت محدود Arken توسط معمار کهنه کار گوکان نویان آغاز شد که در دهه های 1970 و 1980 بسیاری از پروژه های معماری را امضا کرد. در سال ۱۹۸۶ یک مهندس عمران با تجربه به نام Mustafa Noyan به این تیم پیوست.",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Noyanlar Group Constructor"
                        },
                        new
                        {
                            Id = 2L,
                            ConstructorLogo = "Ceaser.jpg",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 91, DateTimeKind.Local).AddTicks(9005),
                            Description = "اگر که به دنبال خرید ملک در قبرس شمالی بوده اید، بدون شک نام سزار ریزورت‌ به گوشتان خورده است. افیک گروپ، شرکت مادر مجتمع سزار قبرس، در سال های اخیر در قبرس ترک مشهور و به دنبال آن اولین پروژه ی این شرکت به نام سزار ریزورت بر سر زبان ها افتاد. شهرک سزار قبرس شمالی با وجود قیمت نسبتا بالا خود در مقایسه با املاک منطقه توانسته در دل فارسی زبانان جا باز کند و جمع کثیری از ایرانیان را در این شهرک گرد هم آورد.\r\nشنا در استخرهای تابستانه، نوشیدن لاته گرم در کافه پاریس در فصل پاییز، پایکوبی در مهمانی های پر زرق و برق زمستانه و در نهایت پیاده روی های سرخوشانه به مقصد ساحل لانگ بیچ در فصل بهار همگی از زیبایی های شهرک سزار قبرس شمالی هستند.\r\nآنچه مجتمع سزار قبرس را از دیگر شهرک های جزیره جدا میکند، شرایط پرداخت اقساطی واحدها می باشد.\r\nوقتی پای اقساط به میان می آید، توجه به تبصره های قرارداد از مسائل حساس و چالش برانگیز می شود. قرارداد مجتمع سزار قبرس حاوی شش تا هشت صفحه با بند ها و تبصره های مختلف به زبان انگلیسی است که عدم توجه و غفلت از هر یک از این بندها ممکن است ضرر و زیان جبران ناپذیری برای خریداران به همراه داشته باشد. امکان تغییر در جزییات تبصره ها با صحبت و رایزنی مشاور املاک شما با مدیران فروش سزار ریزورت وجود دارد. بنابراین پیش از امضای هرگونه قرارداد ملک شهرک سزار قبرس شمالی حتما با مشاور املاک مسلط به زبان انگلیسی و ترکی، مشورت کرده و راهنمایی های لازم را دریافت کنید تا در آینده با مشکلات مالی و حقوقی مواجه نشوید.",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Ceaser Group"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Logo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logo");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 95, DateTimeKind.Local).AddTicks(6303),
                            Description = "The Best real estate in cyprus",
                            ImageName = "silver.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Silver Net Real Estate"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 95, DateTimeKind.Local).AddTicks(6321),
                            Description = "The Best real estate in cyprus",
                            ImageName = "silver-net.jpg",
                            IsDelete = false,
                            IsSelected = false,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Silver Net Real Estate"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.RealEstateServices", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RealEstateServices");
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Social", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Socials");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(2604),
                            Icon = "fa fa-instagram",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "instagram.com",
                            Name = "Instagram"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(2617),
                            Icon = "fa fa-facebok",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Link = "facebook.com",
                            Name = "Facebook"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.SpectacularLocationImages", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("SpectacularlocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SpectacularlocationId");

                    b.ToTable("SpectacularLocationImages");
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Spectacularlocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Spectacularlocations");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(7279),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ghost City"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(7290),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Wall City"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(7293),
                            IsDelete = false,
                            IsSelected = false,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Long Beach"
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 101, DateTimeKind.Local).AddTicks(7294),
                            IsDelete = false,
                            IsSelected = false,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Casino"
                        });
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.TeamMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CellPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telegram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamMembers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CellPhone = "09123071411",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 102, DateTimeKind.Local).AddTicks(5031),
                            Email = "mahancomputer49@gmail.com",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemberPicture = "faryad.jpg",
                            MemberPosition = "CEO",
                            Name = "Faryad"
                        },
                        new
                        {
                            Id = 2L,
                            CellPhone = "09352499091",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 102, DateTimeKind.Local).AddTicks(5044),
                            Email = "faryad.abolhassani@yahoo.com",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemberPicture = "farzad.jpg",
                            MemberPosition = "CEO",
                            Name = "Farzad"
                        },
                        new
                        {
                            Id = 3L,
                            CellPhone = "09122895170",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 102, DateTimeKind.Local).AddTicks(5047),
                            Email = "Mojgan.Nazari@gmail.com",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MemberPicture = "mojgan.jpg",
                            MemberPosition = "Sell Manager",
                            Name = "Mojgan"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityName = "Kish",
                            CountryId = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(3568),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(3577)
                        },
                        new
                        {
                            Id = 2L,
                            CityName = "Tehran",
                            CountryId = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5057),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5063)
                        },
                        new
                        {
                            Id = 3L,
                            CityName = "Iskele",
                            CountryId = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5066),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5067)
                        },
                        new
                        {
                            Id = 4L,
                            CityName = "Girne",
                            CountryId = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5069),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 90, DateTimeKind.Local).AddTicks(5070)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryFlag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryFlag = "",
                            CountryName = "Iran",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(3304),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(3312)
                        },
                        new
                        {
                            Id = 2L,
                            CountryFlag = "",
                            CountryName = "Cyprus",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(4191),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(4198)
                        },
                        new
                        {
                            Id = 3L,
                            CountryFlag = "",
                            CountryName = "USA",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(4200),
                            IsDelete = false,
                            IsSelected = false,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(4201)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.Facility", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyFacilities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(9749),
                            FacilityName = "استخر چهار فصل",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 92, DateTimeKind.Local).AddTicks(9758),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1554),
                            FacilityName = "استخر چهار فصل",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1567),
                            PropertyId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1571),
                            FacilityName = "زمین بازی",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1572),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1575),
                            FacilityName = "رستوران",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1576),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1578),
                            FacilityName = "سالن زیبایی",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 93, DateTimeKind.Local).AddTicks(1579),
                            PropertyId = 1L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.Property", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentPhoneNmber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<int>("ConnectionFee")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeatureImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("FloorSpace")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("KeyHandOverDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfBathroom")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfBedroom")
                        .HasColumnType("int");

                    b.Property<string>("OwnerPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentPlan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("PropertyContractTypeId")
                        .HasColumnType("bigint");

                    b.Property<bool>("PropertyStatus")
                        .HasColumnType("bit");

                    b.Property<long>("PropertyTypeId")
                        .HasColumnType("bigint");

                    b.Property<int>("StampDutyFee")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VATFee")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("PropertyContractTypeId");

                    b.HasIndex("PropertyTypeId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Address = "لانگ بیج",
                            AgentPhoneNmber = "09123071411",
                            CityId = 3L,
                            ConnectionFee = 2300,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            EndDate = new DateTime(2023, 7, 10, 10, 41, 1, 96, DateTimeKind.Local).AddTicks(9214),
                            FeatureImage = "ph1.jpg",
                            Floor = 2,
                            FloorSpace = 55,
                            IsDelete = false,
                            IsSelected = false,
                            KeyHandOverDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(198),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBathroom = 1,
                            NumberOfBedroom = 0,
                            OwnerPhoneNumber = "09123071411",
                            PaymentPlan = "70% پیش پرداخت",
                            Price = 102000.0,
                            PropertyContractTypeId = 1L,
                            PropertyStatus = true,
                            PropertyTypeId = 1L,
                            StampDutyFee = 200,
                            StartDate = new DateTime(2023, 7, 10, 10, 41, 1, 96, DateTimeKind.Local).AddTicks(8698),
                            VATFee = 7000
                        },
                        new
                        {
                            Id = 2L,
                            Address = "لانگ بیج",
                            AgentPhoneNmber = "09123071411",
                            CityId = 3L,
                            ConnectionFee = 2300,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            EndDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6501),
                            FeatureImage = "ph2.jpg",
                            Floor = 2,
                            FloorSpace = 64,
                            IsDelete = false,
                            IsSelected = false,
                            KeyHandOverDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6503),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBathroom = 1,
                            NumberOfBedroom = 1,
                            OwnerPhoneNumber = "09123071411",
                            PaymentPlan = "70% پیش پرداخت",
                            Price = 160000.0,
                            PropertyContractTypeId = 1L,
                            PropertyStatus = true,
                            PropertyTypeId = 1L,
                            StampDutyFee = 200,
                            StartDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6493),
                            VATFee = 7000
                        },
                        new
                        {
                            Id = 3L,
                            Address = "لانگ بیج",
                            AgentPhoneNmber = "09123071411",
                            CityId = 4L,
                            ConnectionFee = 2300,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            EndDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6510),
                            FeatureImage = "ph3.jpg",
                            Floor = 0,
                            FloorSpace = 125,
                            IsDelete = false,
                            IsSelected = false,
                            KeyHandOverDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6511),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBathroom = 2,
                            NumberOfBedroom = 3,
                            OwnerPhoneNumber = "09123071411",
                            PaymentPlan = "70% پیش پرداخت",
                            Price = 325000.0,
                            PropertyContractTypeId = 3L,
                            PropertyStatus = true,
                            PropertyTypeId = 2L,
                            StampDutyFee = 200,
                            StartDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6508),
                            VATFee = 7000
                        },
                        new
                        {
                            Id = 4L,
                            Address = "لانگ بیج",
                            AgentPhoneNmber = "09123071411",
                            CityId = 3L,
                            ConnectionFee = 0,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            EndDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6532),
                            FeatureImage = "ph4.jpg",
                            Floor = 3,
                            FloorSpace = 65,
                            IsDelete = false,
                            IsSelected = false,
                            KeyHandOverDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6533),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBathroom = 1,
                            NumberOfBedroom = 1,
                            OwnerPhoneNumber = "09123071411",
                            PaymentPlan = "ماهیانه",
                            Price = 8450.0,
                            PropertyContractTypeId = 2L,
                            PropertyStatus = true,
                            PropertyTypeId = 1L,
                            StampDutyFee = 0,
                            StartDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6530),
                            VATFee = 0
                        },
                        new
                        {
                            Id = 5L,
                            Address = "لانگ بیج",
                            AgentPhoneNmber = "09123071411",
                            CityId = 3L,
                            ConnectionFee = 1500,
                            CreateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "",
                            EndDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6537),
                            FeatureImage = "ph5.jpg",
                            Floor = 15,
                            FloorSpace = 48,
                            IsDelete = false,
                            IsSelected = false,
                            KeyHandOverDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6539),
                            LastUpdateDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NumberOfBathroom = 1,
                            NumberOfBedroom = 0,
                            OwnerPhoneNumber = "09123071411",
                            PaymentPlan = "20% پیش پرداخت - ",
                            Price = 26000.0,
                            PropertyContractTypeId = 3L,
                            PropertyStatus = true,
                            PropertyTypeId = 1L,
                            StampDutyFee = 250,
                            StartDate = new DateTime(2023, 7, 10, 10, 41, 1, 97, DateTimeKind.Local).AddTicks(6536),
                            VATFee = 2000
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyContractType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PropertyContractTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ContractType = "فروش",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(825),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(834)
                        },
                        new
                        {
                            Id = 2L,
                            ContractType = "اجاره",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(1438),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(1445)
                        },
                        new
                        {
                            Id = 3L,
                            ContractType = "پیش فروش",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(1447),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(1448)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyGallery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyGalleries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(8103),
                            ImageName = "IMG1.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(8113),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9082),
                            ImageName = "IMG2.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9090),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9092),
                            ImageName = "IMG3.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9094),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9096),
                            ImageName = "IMG4.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9097),
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9099),
                            ImageName = "IMG5.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9101),
                            PropertyId = 2L
                        },
                        new
                        {
                            Id = 6L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9103),
                            ImageName = "IMG6.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9104),
                            PropertyId = 2L
                        },
                        new
                        {
                            Id = 7L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9106),
                            ImageName = "IMG7.jpg",
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 98, DateTimeKind.Local).AddTicks(9107),
                            PropertyId = 2L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyPlans");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(4412),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(4421),
                            PlanImage = "IMG1.jpg",
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5381),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5389),
                            PlanImage = "IMG2.jpg",
                            PropertyId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5392),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5393),
                            PlanImage = "IMG3.jpg",
                            PropertyId = 2L
                        },
                        new
                        {
                            Id = 4L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5395),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 99, DateTimeKind.Local).AddTicks(5396),
                            PlanImage = "IMG4.jpg",
                            PropertyId = 2L
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PropertyTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(88),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(97),
                            Type = "آپارتمان"
                        },
                        new
                        {
                            Id = 2L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(602),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(609),
                            Type = "ویلا"
                        },
                        new
                        {
                            Id = 3L,
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(612),
                            IsDelete = false,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(613),
                            Type = "زمین"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyVideo", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AparatLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSelected")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("PropertyId")
                        .HasColumnType("bigint");

                    b.Property<string>("YoutubeLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PropertyId");

                    b.ToTable("PropertyVideos");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            AparatLink = "<style>.h_iframe-aparat_embed_frame{position:relative;}.h_iframe-aparat_embed_frame .ratio{display:block;width:100%;height:auto;}.h_iframe-aparat_embed_frame iframe{position:absolute;top:0;left:0;width:100%;height:100%;}</style><div class=\"h_iframe-aparat_embed_frame\"><span style=\"display: block;padding-top: 57%\"></span><iframe src=\"https://www.aparat.com/video/video/embed/videohash/El1US/vt/frame\"  allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"></iframe></div>",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(5529),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(5538),
                            PropertyId = 1L,
                            YoutubeLink = "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YHdtfcE0w0U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>"
                        },
                        new
                        {
                            Id = 2L,
                            AparatLink = "<style>.h_iframe-aparat_embed_frame{position:relative;}.h_iframe-aparat_embed_frame .ratio{display:block;width:100%;height:auto;}.h_iframe-aparat_embed_frame iframe{position:absolute;top:0;left:0;width:100%;height:100%;}</style><div class=\"h_iframe-aparat_embed_frame\"><span style=\"display: block;padding-top: 57%\"></span><iframe src=\"https://www.aparat.com/video/video/embed/videohash/El1US/vt/frame\"  allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"></iframe></div>",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(6942),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(6949),
                            PropertyId = 2L,
                            YoutubeLink = "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YHdtfcE0w0U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>"
                        },
                        new
                        {
                            Id = 3L,
                            AparatLink = "<style>.h_iframe-aparat_embed_frame{position:relative;}.h_iframe-aparat_embed_frame .ratio{display:block;width:100%;height:auto;}.h_iframe-aparat_embed_frame iframe{position:absolute;top:0;left:0;width:100%;height:100%;}</style><div class=\"h_iframe-aparat_embed_frame\"><span style=\"display: block;padding-top: 57%\"></span><iframe src=\"https://www.aparat.com/video/video/embed/videohash/El1US/vt/frame\"  allowFullScreen=\"true\" webkitallowfullscreen=\"true\" mozallowfullscreen=\"true\"></iframe></div>",
                            CreateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(6952),
                            IsDelete = true,
                            IsSelected = true,
                            LastUpdateDate = new DateTime(2023, 7, 10, 10, 41, 1, 100, DateTimeKind.Local).AddTicks(6954),
                            PropertyId = 3L,
                            YoutubeLink = "<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/YHdtfcE0w0U\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Blog.BlogContent", b =>
                {
                    b.HasOne("Domain.Entities.Blog.BlogGroup", "blogGroup")
                        .WithMany("BlogContents")
                        .HasForeignKey("BlogGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("blogGroup");
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.SpectacularLocationImages", b =>
                {
                    b.HasOne("Domain.Entities.GeneralSiteInformation.Spectacularlocation", "Spectacularlocation")
                        .WithMany("spectacularLocationImages")
                        .HasForeignKey("SpectacularlocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Spectacularlocation");
                });

            modelBuilder.Entity("Domain.Entities.Project.City", b =>
                {
                    b.HasOne("Domain.Entities.Project.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Domain.Entities.Project.Facility", b =>
                {
                    b.HasOne("Domain.Entities.Project.Property", "Property")
                        .WithMany("PropertyFacilities")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Domain.Entities.Project.Property", b =>
                {
                    b.HasOne("Domain.Entities.Project.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Project.PropertyContractType", "PropertyContractType")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyContractTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Project.PropertyType", "PropertyTypes")
                        .WithMany("Properties")
                        .HasForeignKey("PropertyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("PropertyContractType");

                    b.Navigation("PropertyTypes");
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyGallery", b =>
                {
                    b.HasOne("Domain.Entities.Project.Property", "ProPerty")
                        .WithMany("PropertyGalleries")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProPerty");
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyPlan", b =>
                {
                    b.HasOne("Domain.Entities.Project.Property", "Property")
                        .WithMany("PropertyPlans")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyVideo", b =>
                {
                    b.HasOne("Domain.Entities.Project.Property", "ProPerty")
                        .WithMany("PropertyVideos")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProPerty");
                });

            modelBuilder.Entity("Domain.Entities.Blog.BlogGroup", b =>
                {
                    b.Navigation("BlogContents");
                });

            modelBuilder.Entity("Domain.Entities.GeneralSiteInformation.Spectacularlocation", b =>
                {
                    b.Navigation("spectacularLocationImages");
                });

            modelBuilder.Entity("Domain.Entities.Project.City", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Domain.Entities.Project.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Domain.Entities.Project.Property", b =>
                {
                    b.Navigation("PropertyFacilities");

                    b.Navigation("PropertyGalleries");

                    b.Navigation("PropertyPlans");

                    b.Navigation("PropertyVideos");
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyContractType", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Domain.Entities.Project.PropertyType", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
